  - name: Illuminance
    platform: illuminance
    api_key: !secret wu_apikey
    query: pws:IBRACCIA6
    scan_interval:
      minutes: 5

  - platform: template
    sensors:
      wakeup_alarm_time:
        friendly_name: 'Alarm time'
        value_template: '{% if states.input_number.wakeup_hour.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_hour.state | int }}:{% if states.input_number.wakeup_minutes.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_minutes.state | int }}'

  - platform: template
    sensors:
      wakeup_start_time_lights:
        friendly_name: 'Fade-in start time'
        value_template: >
          {% if states.sensor.wakeup_alarm_time and states.input_number.wakeup_duration %}
          {% set alarmtime = states.sensor.wakeup_alarm_time.state %}
          {% set alarm_hour = alarmtime.split(":")[0] | int %}
          {% set alarm_min = alarmtime.split(":")[1] | int %}
          {% set light_dur = states.input_number.wakeup_duration.state | int %}
          {% set alarm_min_light = alarm_min - light_dur %}
          {% if alarm_min_light  < 0 %}
          {% set alarm_min_light = alarm_min_light + 60 %}
          {% set alarm_hour_light = alarm_hour - 1 %}
          {% if alarm_hour_light < 0 %}{% set alarm_hour_light = 23 %}{% endif %}
          {% if alarm_hour_light < 10 %}0{% endif %}{{ alarm_hour_light}}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
          {% else %}
          {% if alarm_hour < 10 %}0{% endif %}{{ alarm_hour }}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
          {% endif %}
          {% endif %}

  - platform: template
    sensors:
      wakeup_fadein_duration:
        friendly_name: 'Fade-in duration'
        value_template: '{{ states.input_number.wakeup_duration.state | int }}'
        unit_of_measurement: 'min'

  - platform: hue
    ip_address: Philipshue.fritz.box
    token: !secret huetoken

  - platform: template
    sensors:
      solar_angle:
        friendly_name: "Sun angle"
        unit_of_measurement: 'degrees'
        value_template: "{{ states.sun.sun.attributes.elevation }}"

      media:
        value_template: '{{ states.remote.reinasharmony.attributes.current_activity }}'
        friendly_name: "Media"
  
  - platform: command_line
    name: SSL cert expiry
    unit_of_measurement: days
    scan_interval: 10800
    command: "ssl-cert-check -b -c /etc/letsencrypt/live/thereinas.it/cert.pem | awk '{ print $NF }'"

  - platform: command_line
    name: db_file_size
    command: "du -m /media/data/mysql/hass | cut -f1"
    unit_of_measurement: 'MB'
    value_template: '{{ value | int - 1 }}'


#  - platform: viaggiatreno
#    train_id: 12279
#    station_id: S08409

  - platform: yr

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: disk_use_percent
        arg: /media/data
      - type: memory_free
      - type: memory_use
#      - type: memory_use_percent 	 
#      - type: memory_use 	 
#      - type: memory_free 	 
#      - type: swap_use_percent 	 
#      - type: swap_use 	 
#      - type: swap_free 	 
#      - type: load_1m 	 
#      - type: load_5m 	 
#      - type: load_15m 	
#      - type: processor_use 	 
#      - type: last_boot 	 
#      - type: since_last_boot
#      - type: network_in eth0
#      - type: network_out eth0
#      - type: packets_in eth0
#      - type: packets_out eth0
#      - type: ipv4_address eth0

  - platform: version

  - platform: mqtt
    state_topic: "emon/emonpi/power1"
    name: "Scambio Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/emonpi/power2"
    name: "Produzione Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/emonpi/power1pluspower2"
    name: "Consumo Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct1"
    name: "Piastra"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct2"
    name: "Forno"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct3"
    name: "Lavastoviglie"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/laundry/ct1"
    name: "Lavatrice"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/laundry/ct2"
    name: "Asciugatrice"
    unit_of_measurement: "W"

  - platform: fritzbox_callmonitor
    host: fritz.box
    user: !secret fritzboxuser
    password: !secret fritzboxpassword
    name: Telefono
    phonebook: 0

  - platform: fritzbox_netmonitor

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'time_date'
      - 'time_utc'
      - 'beat'

  - platform: speedtest
    minute:
      - 30
    monitored_conditions:
      - ping
      - download
      - upload


  - platform: template
    sensors:
      vacuum_status:
        friendly_name: Status
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Status: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}'
        icon_template: >
          {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.status  %}
          {% if val == 'Charging' %}
            mdi:battery-charging
          {% elif val == 'Cleaning' %}
            mdi:move-resize
          {% elif val == 'Returning home' %}
            mdi:keyboard-return
          {% elif val == 'Idle' %}
            mdi:dots-horizontal
          {% elif val == 'Paused' %}
            mdi:pause-circle
          {% else %}
            mdi:help-circle
          {% endif %}
      vacuum_fan_speed:
        friendly_name: Fan Speed
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Mode: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}'
        icon_template: 'mdi:speedometer'
      vacuum_battery:
        friendly_name: Vacuum Battery
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Battery: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}'
        unit_of_measurement: '%'
        icon_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}'
      vacuum_cleaning_time:
        friendly_name: Time of Last Cycle
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
        icon_template: 'mdi:timer'
      vacuum_cleaned_area:
        friendly_name: Area of Last Cycle
        unit_of_measurement: 'm Â²'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area }}'
        icon_template: 'mdi:ruler'
      vacuum_cleanmainbrush:
        friendly_name: Replace main brush
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Main Brush: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_cleansidebrush:
        friendly_name: Replace side brush
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Side brush: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_cleanfilter:
        friendly_name: Replace filter
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Filter: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_sensordirtyleft:
        friendly_name: Replace filter
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Sensor: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_do_not_disturb:
        friendly_name: Do Not Disturb
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb }}'
        icon_template: >
          {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb  %}
          {% if val == 'on' %}
            mdi:do-not-disturb
          {% else %}
            mdi:do-not-disturb-off
          {% endif %}
      vacuum_operation:
        value_template: 'Operation'
      vacuum_accessories:
        value_template: 'Maintenance'

  - platform: template
    sensors:
     consumo_infrastruttura:
        value_template: '{% if states.switch.infrastruttura.attributes["load_power"] is defined %}{{ (states.switch.infrastruttura.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Infrastruttura

  - platform: template
    sensors:
      consumo_altro_salone:
        value_template: '{% if states.switch.altro_salone.attributes["load_power"] is defined %}{{ (states.switch.altro_salone.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Altro Salone

  - platform: template
    sensors:
      consumo_family_entertainment:
        value_template: '{% if states.switch.family_entertainment.attributes["load_power"] is defined %}{{ (states.switch.family_entertainment.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Family Entertainment

  - platform: template
    sensors:
      internetcuttime:
        friendly_name: Switch off at
        entity_id:
          - input_slider.internet_cut_hour
          - input_slider.internet_cut_minutes
        value_template: '{{ "%0.02d:%0.02d" | format(states("input_slider.internet_cut_hour") | int, states("input_slider.internet_cut_minutes") | int) }}'
